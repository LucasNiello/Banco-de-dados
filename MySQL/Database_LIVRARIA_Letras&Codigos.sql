-- GERAÇÃO DE MODELO FÍSICO - MYSQL

-- PASSO 1: CRIAR E SELECIONAR O BANCO DE DADOS COM UM NOME VÁLIDO
CREATE DATABASE IF NOT EXISTS LIVRARIA_LETRAS_E_CODIGOS; 
USE LIVRARIA_LETRAS_E_CODIGOS; 

-- PASSO 2: CRIAR AS TABELAS COM OS TIPOS DE DADOS E RELACIONAMENTOS CORRETOS

-- TABELA DE AUTORES
CREATE TABLE AUTORES (
    ID_AUTOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(100) NOT NULL,
    NACIONALIDADE VARCHAR(50),
    DATA_NASCIMENTO DATE
);

-- TABELA DE EDITORAS
CREATE TABLE EDITORAS (
    ID_EDITORA INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(100) NOT NULL UNIQUE,
    CNPJ VARCHAR(18) UNIQUE,
    ENDERECO VARCHAR(255),
    CIDADE VARCHAR(100),
    CONTATO_NOME VARCHAR(100),
    TELEFONE VARCHAR(20)
);

-- TABELA DE CLIENTES
CREATE TABLE CLIENTES (
    ID_CLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(100) NOT NULL,
    CPF VARCHAR(14) NOT NULL UNIQUE,
    EMAIL VARCHAR(100) UNIQUE,
    TELEFONE VARCHAR(20),
    DATA_NASCIMENTO DATE
);

-- TABELA DE LIVROS (COM AS CHAVES ESTRANGEIRAS PARA AUTORES E EDITORAS)
CREATE TABLE LIVROS (
    ID_LIVRO INT PRIMARY KEY AUTO_INCREMENT,
    TITULO VARCHAR(255) NOT NULL,
    ID_AUTOR_FK INT NOT NULL,
    ID_EDITORA_FK INT NOT NULL,
    GENERO VARCHAR(50),
    PRECO DECIMAL(10, 2) NOT NULL,
    QUANTIDADE_ESTOQUE INT NOT NULL,
    DATA_PUBLICACAO DATE,
    FOREIGN KEY (ID_AUTOR_FK) REFERENCES AUTORES(ID_AUTOR),
    FOREIGN KEY (ID_EDITORA_FK) REFERENCES EDITORAS(ID_EDITORA)
);

-- TABELA DE VENDAS (COM A CHAVE ESTRANGEIRA PARA CLIENTES)
CREATE TABLE VENDAS (
    ID_VENDA INT PRIMARY KEY AUTO_INCREMENT,
    ID_CLIENTE_FK INT NOT NULL,
    DATA_VENDA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VALOR_TOTAL DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (ID_CLIENTE_FK) REFERENCES CLIENTES(ID_CLIENTE)
);

-- TABELA DE ITENS DA VENDA
CREATE TABLE ITENSVENDA (
    ID_ITEM_VENDA INT PRIMARY KEY AUTO_INCREMENT,
    ID_VENDA_FK INT NOT NULL,
    ID_LIVRO_FK INT NOT NULL,
    QUANTIDADE INT NOT NULL,
    PRECO_UNITARIO DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (ID_VENDA_FK) REFERENCES VENDAS(ID_VENDA),
    FOREIGN KEY (ID_LIVRO_FK) REFERENCES LIVROS(ID_LIVRO)
);

-- PASSO 3: INSERÇÃO DE DADOS INICIAIS

INSERT INTO AUTORES (NOME, NACIONALIDADE, DATA_NASCIMENTO) VALUES
('MACHADO DE ASSIS', 'BRASILEIRO', '1839-06-21'),
('J.K. ROWLING', 'BRITÂNICA', '1965-07-31'),
('GEORGE ORWELL', 'BRITÂNICO', '1903-06-25');

INSERT INTO EDITORAS (NOME, CNPJ, ENDERECO, CIDADE, CONTATO_NOME, TELEFONE) VALUES
('ROCCO', '12.345.678/0001-99', 'RUA DOS BOBOS, 0', 'RIO DE JANEIRO', 'CARLOS', '21-9999-8888'),
('COMPANHIA DAS LETRAS', '98.765.432/0001-11', 'AV. PAULISTA, 2073', 'SÃO PAULO', 'ANA', '11-8888-7777');

INSERT INTO CLIENTES (NOME, CPF, EMAIL, TELEFONE, DATA_NASCIMENTO) VALUES
('JOÃO SILVA', '111.222.333-44', 'JOAO.SILVA@EMAIL.COM', '11-1234-5678', '1990-05-15'),
('MARIA OLIVEIRA', '555.666.777-88', 'MARIA.O@EMAIL.COM', '21-9876-5432', '1985-11-20');

INSERT INTO LIVROS (TITULO, ID_AUTOR_FK, ID_EDITORA_FK, GENERO, PRECO, QUANTIDADE_ESTOQUE) VALUES
('DOM CASMURRO', 1, 2, 'ROMANCE', 45.50, 50),
('HARRY POTTER E A PEDRA FILOSOFAL', 2, 1, 'FANTASIA', 59.90, 100),
('1984', 3, 2, 'FICÇÃO CIENTÍFICA', 52.00, 30);

-- CONSULTAS

SELECT
    L.TITULO,
    L.PRECO,
    A.NOME AS AUTOR,
    E.NOME AS EDITORA
FROM LIVROS L
INNER JOIN AUTORES A ON L.ID_AUTOR_FK = A.ID_AUTOR
INNER JOIN EDITORAS E ON L.ID_EDITORA_FK = E.ID_EDITORA;

SELECT TITULO, QUANTIDADE_ESTOQUE FROM LIVROS WHERE QUANTIDADE_ESTOQUE < 40;

UPDATE LIVROS SET PRECO = 49.90 WHERE ID_LIVRO = 1;

-- NOVO AUTOR E LIVRO
INSERT INTO AUTORES (NOME, NACIONALIDADE, DATA_NASCIMENTO) VALUES 
('CLARICE LISPECTOR', 'UCRANIANA-BRASILEIRA', '1920-12-10');

INSERT INTO LIVROS (TITULO, ID_AUTOR_FK, ID_EDITORA_FK, GENERO, PRECO, QUANTIDADE_ESTOQUE) VALUES
('A HORA DA ESTRELA', 4, 2, 'ROMANCE', 38.00, 60);

-- REGISTRO DE UMA VENDA
INSERT INTO VENDAS (ID_CLIENTE_FK, VALOR_TOTAL) VALUES (1, 153.90);
SET @ID_ULTIMA_VENDA = LAST_INSERT_ID();

INSERT INTO ITENSVENDA (ID_VENDA_FK, ID_LIVRO_FK, QUANTIDADE, PRECO_UNITARIO) VALUES
(@ID_ULTIMA_VENDA, 1, 1, 49.90),
(@ID_ULTIMA_VENDA, 3, 2, 52.00);

UPDATE LIVROS SET QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE - 1 WHERE ID_LIVRO = 1;
UPDATE LIVROS SET QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE - 2 WHERE ID_LIVRO = 3;

-- RELATÓRIO: LIVROS MAIS VENDIDOS
SELECT
    L.TITULO,
    SUM(IV.QUANTIDADE) AS TOTAL_VENDIDO
FROM ITENSVENDA IV
INNER JOIN LIVROS L ON IV.ID_LIVRO_FK = L.ID_LIVRO
GROUP BY L.TITULO
ORDER BY TOTAL_VENDIDO DESC;

-- CLIENTES QUE JÁ FIZERAM COMPRAS
SELECT DISTINCT
    C.NOME,
    C.EMAIL,
    C.TELEFONE
FROM CLIENTES C
INNER JOIN VENDAS V ON C.ID_CLIENTE = V.ID_CLIENTE_FK;

-- ATUALIZAÇÃO DE DATA DE PUBLICAÇÃO
UPDATE LIVROS SET DATA_PUBLICACAO = '1899-01-01' WHERE ID_LIVRO = 1;
UPDATE LIVROS SET DATA_PUBLICACAO = '1997-06-26' WHERE ID_LIVRO = 2;
UPDATE LIVROS SET DATA_PUBLICACAO = '1949-06-08' WHERE ID_LIVRO = 3;
UPDATE LIVROS SET DATA_PUBLICACAO = '1977-10-01' WHERE ID_LIVRO = 4;

-- CONSULTA AVANÇADA
SELECT TITULO, PRECO, DATA_PUBLICACAO
FROM LIVROS
WHERE TITULO LIKE '%A%'
    AND YEAR(DATA_PUBLICACAO) > 2025;

SELECT TITULO FROM LIVROS LIMIT 5;

SELECT TITULO AS NOME, YEAR(DATA_PUBLICACAO) AS ANO FROM LIVROS;

SELECT L.TITULO, A.NOME AS AUTOR
FROM LIVROS L
INNER JOIN AUTORES A ON L.ID_AUTOR_FK = A.ID_AUTOR;

SELECT TITULO, COUNT(*) AS QUANTIDADE FROM LIVROS GROUP BY TITULO;

-- =========================================
-- BLOCO DE TRANSAÇÃO DEMONSTRATIVO DIDÁTICO
-- =========================================
START TRANSACTION;
-- DIMINUIR 2 UNIDADES DO ESTOQUE DO LIVRO HARRY POTTER E A PEDRA FILOSOFAL
UPDATE LIVROS
SET QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE - 2
WHERE ID_LIVRO = 2;

SELECT TITULO, QUANTIDADE_ESTOQUE FROM LIVROS WHERE ID_LIVRO = 2;

-- INSERIR O REGISTRO DA VENDA DENTRO DA MESMA TRANSAÇÃO
INSERT INTO VENDAS (ID_CLIENTE_FK, VALOR_TOTAL)
VALUES (1, 153.90);

SET @ID_ULTIMA_VENDA = LAST_INSERT_ID();

INSERT INTO ITENSVENDA (ID_VENDA_FK, ID_LIVRO_FK, QUANTIDADE, PRECO_UNITARIO)
VALUES
(@ID_ULTIMA_VENDA, 1, 1, 49.90),
(@ID_ULTIMA_VENDA, 3, 2, 52.00);

UPDATE LIVROS SET QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE - 1 WHERE ID_LIVRO = 1;
UPDATE LIVROS SET QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE - 2 WHERE ID_LIVRO = 3;


-- =========================================


-- Se estiver tudo certo:
COMMIT;

-- Se quiser desfazer:
-- ROLLBACK;
